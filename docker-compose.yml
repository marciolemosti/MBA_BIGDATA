version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: mba_bigdata_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mba_bigdata
      POSTGRES_USER: mba_user
      POSTGRES_PASSWORD: mba_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - mba_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mba_user -d mba_bigdata"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Adminer para administração do banco (opcional)
  adminer:
    image: adminer:4.8.1
    container_name: mba_bigdata_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - mba_network
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha

  # Redis para cache (opcional, para melhorar performance)
  redis:
    image: redis:7-alpine
    container_name: mba_bigdata_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mba_network
    command: redis-server --appendonly yes --requirepass redis_password_2025
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mba_network:
    driver: bridge

